/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export type ExtraParamsV1Struct = {
  location_ref: string;
  car_size: BigNumberish;
  skip_ipni_announce: boolean;
  remove_unsealed_copy: boolean;
};

export type ExtraParamsV1StructOutput = [
  string,
  BigNumber,
  boolean,
  boolean
] & {
  location_ref: string;
  car_size: BigNumber;
  skip_ipni_announce: boolean;
  remove_unsealed_copy: boolean;
};

export type DealRequestStruct = {
  piece_cid: BytesLike;
  piece_size: BigNumberish;
  verified_deal: boolean;
  label: string;
  start_epoch: BigNumberish;
  end_epoch: BigNumberish;
  storage_price_per_epoch: BigNumberish;
  provider_collateral: BigNumberish;
  client_collateral: BigNumberish;
  extra_params_version: BigNumberish;
  extra_params: ExtraParamsV1Struct;
};

export type DealRequestStructOutput = [
  string,
  BigNumber,
  boolean,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  ExtraParamsV1StructOutput
] & {
  piece_cid: string;
  piece_size: BigNumber;
  verified_deal: boolean;
  label: string;
  start_epoch: BigNumber;
  end_epoch: BigNumber;
  storage_price_per_epoch: BigNumber;
  provider_collateral: BigNumber;
  client_collateral: BigNumber;
  extra_params_version: BigNumber;
  extra_params: ExtraParamsV1StructOutput;
};

export type ProposalIdSetStruct = { proposalId: BytesLike; valid: boolean };

export type ProposalIdSetStructOutput = [string, boolean] & {
  proposalId: string;
  valid: boolean;
};

export type ProviderSetStruct = { provider: BytesLike; valid: boolean };

export type ProviderSetStructOutput = [string, boolean] & {
  provider: string;
  valid: boolean;
};

export interface DealClientInterface extends utils.Interface {
  functions: {
    "AUTHENTICATE_MESSAGE_METHOD_NUM()": FunctionFragment;
    "DATACAP_RECEIVER_HOOK_METHOD_NUM()": FunctionFragment;
    "MARKET_ACTOR_ETH_ADDRESS()": FunctionFragment;
    "MARKET_NOTIFY_DEAL_METHOD_NUM()": FunctionFragment;
    "VERIFREG_ACTOR_ETH_ADDRESS()": FunctionFragment;
    "addBalance(uint256)": FunctionFragment;
    "dealProposals(bytes32)": FunctionFragment;
    "deals(uint256)": FunctionFragment;
    "dealsLength()": FunctionFragment;
    "getDealByIndex(uint256)": FunctionFragment;
    "getDealProposal(bytes32)": FunctionFragment;
    "getExtraParams(bytes32)": FunctionFragment;
    "getProposalIdSet(bytes)": FunctionFragment;
    "getProviderSet(bytes)": FunctionFragment;
    "handle_filecoin_method(uint64,uint64,bytes)": FunctionFragment;
    "makeDealProposal((bytes,uint64,bool,string,int64,int64,uint256,uint256,uint256,uint64,(string,uint64,bool,bool)))": FunctionFragment;
    "owner()": FunctionFragment;
    "pieceDeals(bytes)": FunctionFragment;
    "pieceProviders(bytes)": FunctionFragment;
    "pieceToProposal(bytes)": FunctionFragment;
    "withdrawBalance(address,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "AUTHENTICATE_MESSAGE_METHOD_NUM"
      | "DATACAP_RECEIVER_HOOK_METHOD_NUM"
      | "MARKET_ACTOR_ETH_ADDRESS"
      | "MARKET_NOTIFY_DEAL_METHOD_NUM"
      | "VERIFREG_ACTOR_ETH_ADDRESS"
      | "addBalance"
      | "dealProposals"
      | "deals"
      | "dealsLength"
      | "getDealByIndex"
      | "getDealProposal"
      | "getExtraParams"
      | "getProposalIdSet"
      | "getProviderSet"
      | "handle_filecoin_method"
      | "makeDealProposal"
      | "owner"
      | "pieceDeals"
      | "pieceProviders"
      | "pieceToProposal"
      | "withdrawBalance"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "AUTHENTICATE_MESSAGE_METHOD_NUM",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DATACAP_RECEIVER_HOOK_METHOD_NUM",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MARKET_ACTOR_ETH_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "MARKET_NOTIFY_DEAL_METHOD_NUM",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "VERIFREG_ACTOR_ETH_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addBalance",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "dealProposals",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "deals", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "dealsLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDealByIndex",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getDealProposal",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getExtraParams",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getProposalIdSet",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getProviderSet",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "handle_filecoin_method",
    values: [BigNumberish, BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "makeDealProposal",
    values: [DealRequestStruct]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pieceDeals",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "pieceProviders",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "pieceToProposal",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawBalance",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "AUTHENTICATE_MESSAGE_METHOD_NUM",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DATACAP_RECEIVER_HOOK_METHOD_NUM",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MARKET_ACTOR_ETH_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "MARKET_NOTIFY_DEAL_METHOD_NUM",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "VERIFREG_ACTOR_ETH_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addBalance", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "dealProposals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "deals", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "dealsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDealByIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDealProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getExtraParams",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProposalIdSet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProviderSet",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "handle_filecoin_method",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "makeDealProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "pieceDeals", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pieceProviders",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pieceToProposal",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawBalance",
    data: BytesLike
  ): Result;

  events: {
    "DealProposalCreate(bytes32,uint64,bool,uint256)": EventFragment;
    "ReceivedDataCap(string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "DealProposalCreate"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ReceivedDataCap"): EventFragment;
}

export interface DealProposalCreateEventObject {
  id: string;
  size: BigNumber;
  verified: boolean;
  price: BigNumber;
}
export type DealProposalCreateEvent = TypedEvent<
  [string, BigNumber, boolean, BigNumber],
  DealProposalCreateEventObject
>;

export type DealProposalCreateEventFilter =
  TypedEventFilter<DealProposalCreateEvent>;

export interface ReceivedDataCapEventObject {
  received: string;
}
export type ReceivedDataCapEvent = TypedEvent<
  [string],
  ReceivedDataCapEventObject
>;

export type ReceivedDataCapEventFilter = TypedEventFilter<ReceivedDataCapEvent>;

export interface DealClient extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: DealClientInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    AUTHENTICATE_MESSAGE_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    DATACAP_RECEIVER_HOOK_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    MARKET_ACTOR_ETH_ADDRESS(overrides?: CallOverrides): Promise<[string]>;

    MARKET_NOTIFY_DEAL_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    VERIFREG_ACTOR_ETH_ADDRESS(overrides?: CallOverrides): Promise<[string]>;

    addBalance(
      value: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    dealProposals(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber, boolean] & { idx: BigNumber; valid: boolean }>;

    deals(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        BigNumber,
        boolean,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        ExtraParamsV1StructOutput
      ] & {
        piece_cid: string;
        piece_size: BigNumber;
        verified_deal: boolean;
        label: string;
        start_epoch: BigNumber;
        end_epoch: BigNumber;
        storage_price_per_epoch: BigNumber;
        provider_collateral: BigNumber;
        client_collateral: BigNumber;
        extra_params_version: BigNumber;
        extra_params: ExtraParamsV1StructOutput;
      }
    >;

    dealsLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    getDealByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[DealRequestStructOutput]>;

    getDealProposal(
      proposalId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getExtraParams(
      proposalId: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string] & { extra_params: string }>;

    getProposalIdSet(
      cid: BytesLike,
      overrides?: CallOverrides
    ): Promise<[ProposalIdSetStructOutput]>;

    getProviderSet(
      cid: BytesLike,
      overrides?: CallOverrides
    ): Promise<[ProviderSetStructOutput]>;

    handle_filecoin_method(
      method: BigNumberish,
      arg1: BigNumberish,
      params: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    makeDealProposal(
      deal: DealRequestStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    pieceDeals(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    pieceProviders(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { provider: string; valid: boolean }>;

    pieceToProposal(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { proposalId: string; valid: boolean }>;

    withdrawBalance(
      client: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;
  };

  AUTHENTICATE_MESSAGE_METHOD_NUM(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  DATACAP_RECEIVER_HOOK_METHOD_NUM(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  MARKET_ACTOR_ETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

  MARKET_NOTIFY_DEAL_METHOD_NUM(overrides?: CallOverrides): Promise<BigNumber>;

  VERIFREG_ACTOR_ETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

  addBalance(
    value: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  dealProposals(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<[BigNumber, boolean] & { idx: BigNumber; valid: boolean }>;

  deals(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      string,
      BigNumber,
      boolean,
      string,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      BigNumber,
      ExtraParamsV1StructOutput
    ] & {
      piece_cid: string;
      piece_size: BigNumber;
      verified_deal: boolean;
      label: string;
      start_epoch: BigNumber;
      end_epoch: BigNumber;
      storage_price_per_epoch: BigNumber;
      provider_collateral: BigNumber;
      client_collateral: BigNumber;
      extra_params_version: BigNumber;
      extra_params: ExtraParamsV1StructOutput;
    }
  >;

  dealsLength(overrides?: CallOverrides): Promise<BigNumber>;

  getDealByIndex(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<DealRequestStructOutput>;

  getDealProposal(
    proposalId: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getExtraParams(
    proposalId: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getProposalIdSet(
    cid: BytesLike,
    overrides?: CallOverrides
  ): Promise<ProposalIdSetStructOutput>;

  getProviderSet(
    cid: BytesLike,
    overrides?: CallOverrides
  ): Promise<ProviderSetStructOutput>;

  handle_filecoin_method(
    method: BigNumberish,
    arg1: BigNumberish,
    params: BytesLike,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  makeDealProposal(
    deal: DealRequestStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  pieceDeals(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

  pieceProviders(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, boolean] & { provider: string; valid: boolean }>;

  pieceToProposal(
    arg0: BytesLike,
    overrides?: CallOverrides
  ): Promise<[string, boolean] & { proposalId: string; valid: boolean }>;

  withdrawBalance(
    client: string,
    value: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  callStatic: {
    AUTHENTICATE_MESSAGE_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    DATACAP_RECEIVER_HOOK_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MARKET_ACTOR_ETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

    MARKET_NOTIFY_DEAL_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    VERIFREG_ACTOR_ETH_ADDRESS(overrides?: CallOverrides): Promise<string>;

    addBalance(value: BigNumberish, overrides?: CallOverrides): Promise<void>;

    dealProposals(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[BigNumber, boolean] & { idx: BigNumber; valid: boolean }>;

    deals(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        string,
        BigNumber,
        boolean,
        string,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        BigNumber,
        ExtraParamsV1StructOutput
      ] & {
        piece_cid: string;
        piece_size: BigNumber;
        verified_deal: boolean;
        label: string;
        start_epoch: BigNumber;
        end_epoch: BigNumber;
        storage_price_per_epoch: BigNumber;
        provider_collateral: BigNumber;
        client_collateral: BigNumber;
        extra_params_version: BigNumber;
        extra_params: ExtraParamsV1StructOutput;
      }
    >;

    dealsLength(overrides?: CallOverrides): Promise<BigNumber>;

    getDealByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<DealRequestStructOutput>;

    getDealProposal(
      proposalId: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getExtraParams(
      proposalId: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getProposalIdSet(
      cid: BytesLike,
      overrides?: CallOverrides
    ): Promise<ProposalIdSetStructOutput>;

    getProviderSet(
      cid: BytesLike,
      overrides?: CallOverrides
    ): Promise<ProviderSetStructOutput>;

    handle_filecoin_method(
      method: BigNumberish,
      arg1: BigNumberish,
      params: BytesLike,
      overrides?: CallOverrides
    ): Promise<[number, BigNumber, string]>;

    makeDealProposal(
      deal: DealRequestStruct,
      overrides?: CallOverrides
    ): Promise<string>;

    owner(overrides?: CallOverrides): Promise<string>;

    pieceDeals(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    pieceProviders(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { provider: string; valid: boolean }>;

    pieceToProposal(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string, boolean] & { proposalId: string; valid: boolean }>;

    withdrawBalance(
      client: string,
      value: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {
    "DealProposalCreate(bytes32,uint64,bool,uint256)"(
      id?: BytesLike | null,
      size?: null,
      verified?: boolean | null,
      price?: null
    ): DealProposalCreateEventFilter;
    DealProposalCreate(
      id?: BytesLike | null,
      size?: null,
      verified?: boolean | null,
      price?: null
    ): DealProposalCreateEventFilter;

    "ReceivedDataCap(string)"(received?: null): ReceivedDataCapEventFilter;
    ReceivedDataCap(received?: null): ReceivedDataCapEventFilter;
  };

  estimateGas: {
    AUTHENTICATE_MESSAGE_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    DATACAP_RECEIVER_HOOK_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    MARKET_ACTOR_ETH_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    MARKET_NOTIFY_DEAL_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    VERIFREG_ACTOR_ETH_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    addBalance(
      value: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    dealProposals(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    deals(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    dealsLength(overrides?: CallOverrides): Promise<BigNumber>;

    getDealByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDealProposal(
      proposalId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getExtraParams(
      proposalId: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProposalIdSet(
      cid: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getProviderSet(
      cid: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    handle_filecoin_method(
      method: BigNumberish,
      arg1: BigNumberish,
      params: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    makeDealProposal(
      deal: DealRequestStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    pieceDeals(arg0: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    pieceProviders(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pieceToProposal(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawBalance(
      client: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    AUTHENTICATE_MESSAGE_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    DATACAP_RECEIVER_HOOK_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MARKET_ACTOR_ETH_ADDRESS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    MARKET_NOTIFY_DEAL_METHOD_NUM(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    VERIFREG_ACTOR_ETH_ADDRESS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addBalance(
      value: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    dealProposals(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    deals(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    dealsLength(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getDealByIndex(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDealProposal(
      proposalId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExtraParams(
      proposalId: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProposalIdSet(
      cid: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProviderSet(
      cid: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    handle_filecoin_method(
      method: BigNumberish,
      arg1: BigNumberish,
      params: BytesLike,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    makeDealProposal(
      deal: DealRequestStruct,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    pieceDeals(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pieceProviders(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pieceToProposal(
      arg0: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawBalance(
      client: string,
      value: BigNumberish,
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;
  };
}
